### All the commented configuration in this sample is the default value
### you can override the configuration by uncomment and edit the value 
### in a configuration file.
###
### NOTE: DO NOT EDIT THIS FILE DIRECTLY! 
###       Make a copy, edit and use that copy!

[general]
## In our case, we use 200-class imagenet dataset
# num_classes = 200

[runner]
## The image queue size
# queue_size = 8

[detector]
## Set cpu_mode to `true` to use cpu only
# cpu_mode = false

## GPU device id to use
# device_id = 0

## prototxt file
# proto = "./fast_rcnn_test.pt"

## caffemodel file
# model = "./fast_rcnn_test.caffemodel"

[reducer]
## Reduce to `max_per_image` boxes in one image
# max_per_image = 5

## Boxes that has score beyond this threshold will be handled in NMS
# score_thresh = 0.05

## Set `cpu_nms` to true to execute NMS on CPU
# cpu_nms = false

## Overlap threshold used for non-maximum suppression (suppress boxes with
## IoU >= this threshold)
# IoU_thresh = 0.3

[valapi]
## The directory that contains the validation images
# should be the path of the directory that contain the validation images
# you can leave this configuration to default and set your ${IMAGENET_DATA_DIR}
# environment variable
# pic_dir = "${IMAGENET_DATA_DIR}/ILSVRC2013_DET_val/"

## This file contains a list of names of validation images for the detection task
# should be the path of ${ILSVRC-devkit}/data/det_lists/val.txt on your machine
# you can leave this configuration to default and set your ${ILSVRC_DEVKIT_DIR}
# environment variable
# val_file = "${ILSVRC_DEVKIT_DIR}/data/det_lists/val.txt"

## The single file that all the results should be write to
# (The format is a ILSVRC-devkit evaluable format)
# res_file = "val_res.txt"

[localapi]
## The directory that contains the test images
# local_dir = "./images"

## The single file that all the results should be write to.
# if set to "", will write all the answers to `res_dir`.
# single_res_file = ""

# res_dir = "./images_res"
